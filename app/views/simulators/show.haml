- questions_meta = []; count = 0
.application-wrapper.container-fluid
  .row
    .content-wrapper
      .application-content
        .simulator-test-holder.col-sm-9
          - @simulated_categories.each do |simulated_category|
            - category = simulated_category.category
            .simulator-heading
              %h3= category.name
            - category.sub_categories.each do |sub_category|
              - sub_questions = @questions.select{|question| question[:sub_category_id] == sub_category.id}
              - unless !sub_questions || sub_questions.empty?
                .simulator-questions
                  .subcategory-holder
                    %h4= sub_category.name
                    %p= sub_category.description
                    %hr/
                    - sub_questions.each do |sub_question|
                      - count += 1
                      - answered_question ||=  get_simulator_answered_question(SimulatorAnsweredQuestion, @simulator.id, sub_question.id)
                      %div{:class => "question_#{sub_question.id}"}
                        - unless @simulator.completed?
                          = render "simulators/question", question: sub_question, answered_question: answered_question, question_no: count
                        - else
                          %p
                            = render partial: "simulator_answered_questions/show", locals: { question: sub_question}
                        - questions_meta << answered_question_meta(sub_question.id, answered_question, count)
              / sub questions check
            / sub_category loop
          - end if @simulated_categories && @simulator
          /
            simulated_category loop
          / FINAL BTN
          .simulator-exam-btn-holder
            .simulator-bnt-holder
              %div
                = render "simulators/finish_button"
        - unless @simulator.completed?
          = render "simulators/timer"
        = render "simulators/visual_colored_cues", questions_meta: questions_meta
= render "modal"
= render "finish_modal"
